********************************************************************************
pvs 16.15-s010 64 bit (Fri Jun 28 22:24:07 PDT 2019)
Build Ref No.: 010 Production (06-28-2019) [pvs_1615]

Copyright 2019 Cadence Design Systems, Inc.
All rights reserved worldwide.

Build O/S:       Linux x86_64 2.6.18-194.el5
Executed on:     s2424 (Linux x86_64 3.10.0-1160.6.1.el7.x86_64)
Process Id:      8481
Starting Time:   Tue Jan 12 14:46:30 2021 (Tue Jan 12 13:46:30 2021 GMT)
With parameters: -lvs -get_rules /tmp/pvsrng.31879@s2424.1 -tc top -gds /dev/null -get_options /tmp/pvsoptpar.31879@s2424.1 -gen_tags /tmp/pvsgentags.31879@s2424.1 -stc top -cdl . -control /tmp/ipvsRulesCheckControl.31879@s2424.1 /home/saul/projects/KALLHALL_DIG/virtuoso/lvs_runs/.technology.rul.31879@s2424.1 
********************************************************************************


########################################################################
Get host info ...
########################################################################
CPU info:
    model name      :  Intel(R) Xeon(R) CPU E5-2630 v3 @ 2.40GHz
    cpu MHz         :  1207.324
    cache size      :  20480 KB
    physical cores  :  16
    logical cores   :  32
    hyper-threading on

Memory info:
    64168M physical memory installed.

    MemTotal:       65709336 kB
    MemFree:        49276632 kB
    MemAvailable:   55619104 kB
    Buffers:            3208 kB
    Cached:          9354244 kB
    SwapCached:            0 kB
    Active:          8879376 kB
    Inactive:        3380948 kB
    Active(anon):    4969844 kB
    Inactive(anon):  1244980 kB
    Active(file):    3909532 kB
    Inactive(file):  2135968 kB
    Unevictable:           0 kB
    Mlocked:               0 kB
    SwapTotal:      32964604 kB
    SwapFree:       32964604 kB
    Dirty:                32 kB
    Writeback:             0 kB
    AnonPages:       2900792 kB
    Mapped:           569216 kB
    Shmem:           3311936 kB
    Slab:            1091416 kB
    SReclaimable:     788872 kB
    SUnreclaim:       302544 kB
    KernelStack:       10784 kB
    PageTables:        41648 kB
    NFS_Unstable:          0 kB
    Bounce:                0 kB
    WritebackTmp:          0 kB
    CommitLimit:    65819272 kB
    Committed_AS:   10400224 kB
    VmallocTotal:   34359738367 kB
    VmallocUsed:      423064 kB
    VmallocChunk:   34325399548 kB
    Percpu:            10240 kB
    HardwareCorrupted:     0 kB
    AnonHugePages:    716800 kB
    CmaTotal:              0 kB
    CmaFree:               0 kB
    HugePages_Total:       0
    HugePages_Free:        0
    HugePages_Rsvd:        0
    HugePages_Surp:        0
    Hugepagesize:       2048 kB
    DirectMap4k:      445764 kB
    DirectMap2M:     6799360 kB
    DirectMap1G:    59768832 kB


########################################################################
Get environment info ...
########################################################################
ENV VAR: TCL_LIBRARY = /pkg/cadence/installs/PVS161/share/lib/tcltk/08.64/tcl8.6
ENV VAR: TCLX_LIBRARY = /pkg/cadence/installs/PVS161/share/lib/tclx/08.40
ENV VAR: TCLLIBPATH = /pkg/cadence/installs/PVS161/share/lib/itcl/3.4.1 /pkg/cadence/installs/PVS161/share/lib/tclxml/3.2 /pkg/cadence/installs/PVS161/share/lib/tcllib/1.18 /pkg/cadence/installs/PVS161/share/lib/itcl/3.4.1 /pkg/cadence/installs/PVS161/share/lib/tclxml/3.2 /pkg/cadence/installs/PVS161/share/lib/tcllib/1.18 


########################################################################
Parsing Control File /tmp/ipvsRulesCheckControl.31879@s2424.1 ...
########################################################################
RESULTS_DB -erc "/home/saul/projects/KALLHALL_DIG/virtuoso/lvs_runs/counter.erc_errors.ascii" -ascii;
LVS_RUN_ERC_CHECKS yes;

########################################################################
Parsing Rule File /home/saul/projects/KALLHALL_DIG/virtuoso/lvs_runs/.technology.rul.31879@s2424.1 ...
########################################################################
TECHNOLOGY gpdk045_pvs -ruleSet default -techLib /home/saul/projects/KALLHALL_DIG/virtuoso/pvtech.lib;
[INFO] TECHNOLOGY: Rules file /home/saul/projects/KALLHALL/pvs/./pvlLVS.rul will be included after the remainder of the current rules are processed.
[INFO] TECHNOLOGY gpdk045_pvs -techLib /home/saul/projects/KALLHALL_DIG/virtuoso/pvtech.lib: End of additions.
include "./pvs_control_file"
variable R_metal1 0.0736;
variable R_metal2_7 0.0604;
variable R_metal8_10 0.0214;
variable R_metal11 0.021;
variable R_snpoly 15;
variable R_sppoly 15;
variable R_nsnpoly 200;
variable R_nsppoly 650;
variable R_snactive 18;
variable R_spactive 15;
variable R_nsnactive 100;
variable R_nspactive 200;
variable R_nwell 450;
variable R_pwell 1000;
variable resTol 5;
LVS_NETLIST yes -allow_inconsistent_model;
LVS_FILTER_OPTION AG RC RE RG;
INPUT_SCALE 2000;
GRID 5;
UNIT -length u;
TEXT_DEPTH -primary;
MASK_SVDB_DIR svdb;
LAYOUT_PRESERVE_CASE -property yes;
LAYER_DEF empty 999;
LAYER_DEF BJTdum 1000;
LAYER_MAP 15 -datatype 0 1000;
LAYER_DEF Bondpad 1001;
LAYER_MAP 36 -datatype 0 1001;
LAYER_DEF Cap3dum 1002;
LAYER_MAP 84 -datatype 0 1002;
LAYER_DEF CapMetal 1003;
LAYER_MAP 14 -datatype 0 1003;
LAYER_DEF Capdum 1004;
LAYER_MAP 12 -datatype 0 1004;
LAYER_DEF Cont 1005;
LAYER_MAP 6 -datatype 0 1005;
LAYER_DEF DIOdummy 1006;
LAYER_MAP 22 -datatype 0 1006;
LAYER_DEF IND2dummy 1007;
LAYER_MAP 17 -datatype 0 1007;
LAYER_DEF INDdummy 1008;
LAYER_MAP 16 -datatype 0 1008;
LAYER_DEF M1Resdum 1009;
LAYER_MAP 75 -datatype 0 1009;
LAYER_DEF M2Resdum 1010;
LAYER_MAP 76 -datatype 0 1010;
LAYER_DEF M3Resdum 1011;
LAYER_MAP 77 -datatype 0 1011;
LAYER_DEF M4Resdum 1012;
LAYER_MAP 78 -datatype 0 1012;
LAYER_DEF M5Resdum 1013;
LAYER_MAP 79 -datatype 0 1013;
LAYER_DEF M6Resdum 1014;
LAYER_MAP 80 -datatype 0 1014;
LAYER_DEF M7Resdum 1015;
LAYER_MAP 81 -datatype 0 1015;
LAYER_DEF M8Resdum 1016;
LAYER_MAP 82 -datatype 0 1016;
LAYER_DEF M9Resdum 1017;
LAYER_MAP 83 -datatype 0 1017;
LAYER_DEF M10Resdum 1018;
LAYER_MAP 93 -datatype 0 1018;
LAYER_DEF M11Resdum 1019;
LAYER_MAP 103 -datatype 0 1019;
LAYER_DEF Metal1 1020;
LAYER_MAP 7 -datatype -le 5 1020;
LAYER_DEF Metal2 1021;
LAYER_MAP 9 -datatype -le 5 1021;
LAYER_DEF Metal3 1022;
LAYER_MAP 11 -datatype -le 5 1022;
LAYER_DEF Metal4 1023;
LAYER_MAP 31 -datatype -le 5 1023;
LAYER_DEF Metal5 1024;
LAYER_MAP 33 -datatype -le 5 1024;
LAYER_DEF Metal6 1025;
LAYER_MAP 35 -datatype -le 5 1025;
LAYER_DEF Metal7 1026;
LAYER_MAP 38 -datatype -le 5 1026;
LAYER_DEF Metal8 1027;
LAYER_MAP 40 -datatype -le 5 1027;
LAYER_DEF Metal9 1028;
LAYER_MAP 42 -datatype -le 5 1028;
LAYER_DEF Metal10 1029;
LAYER_MAP 152 -datatype -le 5 1029;
LAYER_DEF Metal11 1030;
LAYER_MAP 162 -datatype -le 5 1030;
LAYER_DEF NPN2dum 1031;
LAYER_MAP 110 -datatype 0 1031;
LAYER_DEF NPN5dum 1032;
LAYER_MAP 111 -datatype 0 1032;
LAYER_DEF NPN10dum 1033;
LAYER_MAP 112 -datatype 0 1033;
LAYER_DEF NPNdummy 1034;
LAYER_MAP 20 -datatype 0 1034;
LAYER_DEF Nburied 1035;
LAYER_MAP 19 -datatype 0 1035;
LAYER_DEF Nhvt 1036;
LAYER_MAP 18 -datatype 0 1036;
LAYER_DEF Nimp 1037;
LAYER_MAP 4 -datatype 0 1037;
LAYER_DEF Nlvt 1038;
LAYER_MAP 26 -datatype 0 1038;
LAYER_DEF Nwell 1039;
LAYER_MAP 2 -datatype 0 1039;
LAYER_DEF Nzvt 1040;
LAYER_MAP 52 -datatype 0 1040;
LAYER_DEF Oxide 1041;
LAYER_MAP 1 -datatype 0 1041;
LAYER_DEF Oxide_thk 1042;
LAYER_MAP 24 -datatype 0 1042;
LAYER_DEF PNPdummy 1043;
LAYER_MAP 21 -datatype 0 1043;
LAYER_DEF Phvt 1044;
LAYER_MAP 23 -datatype 0 1044;
LAYER_DEF Pimp 1045;
LAYER_MAP 5 -datatype 0 1045;
LAYER_DEF Plvt 1046;
LAYER_MAP 27 -datatype 0 1046;
LAYER_DEF Poly 1047;
LAYER_MAP 3 -datatype 0 1047;
LAYER_DEF Psub 1048;
LAYER_MAP 25 -datatype 0 1048;
LAYER_DEF ResWdum 1049;
LAYER_MAP 71 -datatype 0 1049;
LAYER_DEF Resdum 1050;
LAYER_MAP 13 -datatype 0 1050;
LAYER_DEF SiProt 1051;
LAYER_MAP 72 -datatype 0 1051;
LAYER_DEF Via1 1052;
LAYER_MAP 8 -datatype 0 1052;
LAYER_DEF Via2 1053;
LAYER_MAP 10 -datatype 0 1053;
LAYER_DEF Via3 1054;
LAYER_MAP 30 -datatype 0 1054;
LAYER_DEF Via4 1055;
LAYER_MAP 32 -datatype 0 1055;
LAYER_DEF Via5 1056;
LAYER_MAP 34 -datatype 0 1056;
LAYER_DEF Via6 1057;
LAYER_MAP 37 -datatype 0 1057;
LAYER_DEF Via7 1058;
LAYER_MAP 39 -datatype 0 1058;
LAYER_DEF Via8 1059;
LAYER_MAP 41 -datatype 0 1059;
LAYER_DEF Via9 1060;
LAYER_MAP 151 -datatype 0 1060;
LAYER_DEF Via10 1061;
LAYER_MAP 161 -datatype 0 1061;
LAYER_DEF text 1098;
LAYER_MAP 63 -texttype 0 1098;
TEXT_LAYER text;
PORT -text_layer text;
LAYER_DEF ind10_text 1062;
LAYER_MAP 152 -texttype 0 1062;
TEXT_LAYER ind10_text;
PORT -text_layer ind10_text;
LAYER_DEF ind11_text 1063;
LAYER_MAP 162 -texttype 0 1063;
TEXT_LAYER ind11_text;
PORT -text_layer ind11_text;
LAYER_DEF nwell_conn_text 10645;
LAYER_MAP 2 -texttype 0 10645;
TEXT_LAYER nwell_conn_text;
PORT -text_layer nwell_conn_text;
LAYER_DEF metal1_conn_text 1064;
LAYER_MAP 7 -texttype 0 1064;
TEXT_LAYER metal1_conn_text;
PORT -text_layer metal1_conn_text;
LAYER_DEF metal2_conn_text 1065;
LAYER_MAP 9 -texttype 0 1065;
TEXT_LAYER metal2_conn_text;
PORT -text_layer metal2_conn_text;
LAYER_DEF metal3_conn_text 1066;
LAYER_MAP 11 -texttype 0 1066;
TEXT_LAYER metal3_conn_text;
PORT -text_layer metal3_conn_text;
LAYER_DEF metal4_conn_text 1067;
LAYER_MAP 31 -texttype 0 1067;
TEXT_LAYER metal4_conn_text;
PORT -text_layer metal4_conn_text;
LAYER_DEF metal5_conn_text 1068;
LAYER_MAP 33 -texttype 0 1068;
TEXT_LAYER metal5_conn_text;
PORT -text_layer metal5_conn_text;
LAYER_DEF metal6_conn_text 1069;
LAYER_MAP 35 -texttype 0 1069;
TEXT_LAYER metal6_conn_text;
PORT -text_layer metal6_conn_text;
LAYER_DEF metal7_conn_text 1070;
LAYER_MAP 38 -texttype 0 1070;
TEXT_LAYER metal7_conn_text;
PORT -text_layer metal7_conn_text;
LAYER_DEF metal8_conn_text 1071;
LAYER_MAP 40 -texttype 0 1071;
TEXT_LAYER metal8_conn_text;
PORT -text_layer metal8_conn_text;
LAYER_DEF metal9_conn_text 1072;
LAYER_MAP 42 -texttype 0 1072;
TEXT_LAYER metal9_conn_text;
PORT -text_layer metal9_conn_text;
LAYER_DEF metal10_conn_text 1073;
LAYER_MAP 152 -texttype 0 1073;
TEXT_LAYER metal10_conn_text;
PORT -text_layer metal10_conn_text;
LAYER_DEF metal11_conn_text 1074;
LAYER_MAP 162 -texttype 0 1074;
TEXT_LAYER metal11_conn_text;
PORT -text_layer metal11_conn_text;
LAYER_DEF nwell_label 10765;
LAYER_MAP 2 -texttype 0 10765;
TEXT_LAYER nwell_label;
PORT -text_layer nwell_label;
LAYER_DEF m1_label 1076;
LAYER_MAP 7 -texttype 3 1076;
TEXT_LAYER m1_label;
PORT -text_layer m1_label;
LAYER_DEF m2_label 1077;
LAYER_MAP 9 -texttype 3 1077;
TEXT_LAYER m2_label;
PORT -text_layer m2_label;
LAYER_DEF m3_label 1078;
LAYER_MAP 11 -texttype 3 1078;
TEXT_LAYER m3_label;
PORT -text_layer m3_label;
LAYER_DEF m4_label 1079;
LAYER_MAP 31 -texttype 3 1079;
TEXT_LAYER m4_label;
PORT -text_layer m4_label;
LAYER_DEF m5_label 1080;
LAYER_MAP 33 -texttype 3 1080;
TEXT_LAYER m5_label;
PORT -text_layer m5_label;
LAYER_DEF m6_label 1081;
LAYER_MAP 35 -texttype 3 1081;
TEXT_LAYER m6_label;
PORT -text_layer m6_label;
LAYER_DEF m7_label 1082;
LAYER_MAP 38 -texttype 3 1082;
TEXT_LAYER m7_label;
PORT -text_layer m7_label;
LAYER_DEF m8_label 1083;
LAYER_MAP 40 -texttype 3 1083;
TEXT_LAYER m8_label;
PORT -text_layer m8_label;
LAYER_DEF m9_label 1084;
LAYER_MAP 42 -texttype 3 1084;
TEXT_LAYER m9_label;
PORT -text_layer m9_label;
LAYER_DEF m10_label 1085;
LAYER_MAP 152 -texttype 3 1085;
TEXT_LAYER m10_label;
PORT -text_layer m10_label;
LAYER_DEF m11_label 1086;
LAYER_MAP 162 -texttype 3 1086;
TEXT_LAYER m11_label;
PORT -text_layer m11_label;
LAYER_DEF nwell_pin 10875;
LAYER_MAP 2 -texttype 0 10875;
TEXT_LAYER nwell_pin;
PORT -text_layer nwell_pin;
LAYER_DEF m1_pin 1087;
LAYER_MAP 7 -texttype 1 1087;
TEXT_LAYER m1_pin;
PORT -text_layer m1_pin;
LAYER_DEF m2_pin 1088;
LAYER_MAP 9 -texttype 1 1088;
TEXT_LAYER m2_pin;
PORT -text_layer m2_pin;
LAYER_DEF m3_pin 1089;
LAYER_MAP 11 -texttype 1 1089;
TEXT_LAYER m3_pin;
PORT -text_layer m3_pin;
LAYER_DEF m4_pin 1090;
LAYER_MAP 31 -texttype 1 1090;
TEXT_LAYER m4_pin;
PORT -text_layer m4_pin;
LAYER_DEF m5_pin 1091;
LAYER_MAP 33 -texttype 1 1091;
TEXT_LAYER m5_pin;
PORT -text_layer m5_pin;
LAYER_DEF m6_pin 1092;
LAYER_MAP 35 -texttype 1 1092;
TEXT_LAYER m6_pin;
PORT -text_layer m6_pin;
LAYER_DEF m7_pin 1093;
LAYER_MAP 38 -texttype 1 1093;
TEXT_LAYER m7_pin;
PORT -text_layer m7_pin;
LAYER_DEF m8_pin 1094;
LAYER_MAP 40 -texttype 1 1094;
TEXT_LAYER m8_pin;
PORT -text_layer m8_pin;
LAYER_DEF m9_pin 1095;
LAYER_MAP 42 -texttype 1 1095;
TEXT_LAYER m9_pin;
PORT -text_layer m9_pin;
LAYER_DEF m10_pin 1096;
LAYER_MAP 152 -texttype 1 1096;
TEXT_LAYER m10_pin;
PORT -text_layer m10_pin;
LAYER_DEF m11_pin 1097;
LAYER_MAP 162 -texttype 1 1097;
TEXT_LAYER m11_pin;
PORT -text_layer m11_pin;
EXTENT bulk;
AND NPN2dum NPNdummy _npn2;
AND NPN5dum NPNdummy _npn5;
AND NPN10dum NPNdummy _npn10;
AND M1Resdum Metal1 _resm1;
AND M2Resdum Metal2 _resm2;
AND M3Resdum Metal3 _resm3;
AND M4Resdum Metal4 _resm4;
AND M5Resdum Metal5 _resm5;
AND M6Resdum Metal6 _resm6;
AND M7Resdum Metal7 _resm7;
AND M8Resdum Metal8 _resm8;
AND M9Resdum Metal9 _resm9;
AND M10Resdum Metal10 _resm10;
AND M11Resdum Metal11 _resm11;
AND Bondpad Metal9 bp_tap;
AND Cont Poly cont_poly;
AND INDdummy Metal10 ind10;
NOT Metal1 M1Resdum metal1_conn;
NOT Metal2 M2Resdum metal2_conn;
NOT Metal3 M3Resdum metal3_conn;
NOT Metal4 M4Resdum metal4_conn;
NOT Metal5 M5Resdum metal5_conn;
NOT Metal6 M6Resdum metal6_conn;
NOT Metal7 M7Resdum metal7_conn;
NOT Metal8 M8Resdum metal8_conn;
NOT Metal9 M9Resdum metal9_conn;
AND Nimp Oxide nactive;
AND Nburied Nwell nb_tap;
NOT Nwell ResWdum nwell_conn;
AND Oxide Pimp pactive;
NOT pactive Poly pdiff;
NOT pdiff Resdum pdiff_conn;
AND Cont pdiff_conn cont_pdiff;
NOT Poly Resdum poly_conn;
NOT nactive poly_conn ndiff;
NOT ndiff Resdum ndiff_conn;
AND Cont ndiff_conn cont_ndiff;
AND CapMetal Via10 via10_cap;
NOT Via10 CapMetal via10_nocap;
AND Nwell SiProt L40182;
AND L40182 ResWdum _resnwoxide;
SELECT -interact -not Nwell SiProt L25544;
AND L25544 ResWdum _resnwsti;
AND BJTdum pdiff_conn L68803;
AREA L68803 -eq 4 _vpnp2;
AREA L68803 -eq 25 _vpnp5;
AREA L68803 -eq 100 _vpnp10;
AND INDdummy Metal11 L13465;
SIZE L13465 -by 0.01 -overunder ind11;
SELECT -enclose INDdummy ind11 -lt 2 _ind_a;
SELECT -interact -not INDdummy _ind_a _ind_s1;
SELECT -enclose _ind_s1 ind11 _ind_s;
NOT ind10 ind11 ind_nr;
OR INDdummy M10Resdum L17074;
NOT Metal10 L17074 metal10_conn;
OR INDdummy M11Resdum L86607;
NOT Metal11 L86607 metal11_conn;
AND metal10_conn metal11_conn L92042;
SELECT -interact CapMetal L92042 _mimcap;
AND NPNdummy ndiff_conn L61645;
NOT L61645 Nwell npn_emit;
AND Psub pdiff_conn L98077;
AND L98077 PNPdummy pnp_emit;
OR CapMetal INDdummy L47735;
NOT Via10 L47735 via10_nodev;
ANGLE -not IND2dummy -ltgt 0 90 L57315;
EDGE_EXPAND L57315 -outside_by 0.01 L71536;
NOT L71536 IND2dummy L93547;
SELECT -inside L93547 ind11 ind2_width;
AND _ind_a ind2_width inda_width;
AND _ind_s ind2_width inds_width;
OR ind10 ind11 L83584;
HOLES L83584 -inner L87155;
VERTEX L87155 -lt 14 ind_hole;
AND Nwell ndiff_conn L74405;
AND NPNdummy Psub L28555;
NOT L74405 L28555 ntap;
NOT pdiff_conn Nwell L65704;
NOT L65704 PNPdummy ptap;
AND DIOdummy Oxide L54696;
AND L54696 Oxide_thk L77738;
AND L77738 Nzvt L73169;
NOT L73169 Nwell _ndio_2v_nvt;
NOT L54696 Oxide_thk L97435;
AND L97435 Nhvt L22301;
NOT L22301 Nwell _ndio_hvt;
AND L97435 Nlvt L18457;
NOT L18457 Nwell _ndio_lvt;
AND L97435 Nzvt L5003;
NOT L5003 Nwell _ndio_nvt;
AND L97435 Phvt L62719;
AND L62719 Nwell _pdio_hvt;
AND L97435 Plvt L58875;
AND L58875 Nwell _pdio_lvt;
NOT Oxide Oxide_thk L28394;
AND L28394 Poly L66375;
AND L66375 Pimp L29970;
AND L29970 Phvt _pmos1v_hvt;
AND L29970 Plvt _pmos1v_lvt;
AND SiProt nactive L18758;
AND L18758 Resdum L23316;
NOT L23316 Nwell _resnsndiff;
AND Poly SiProt L5240;
AND L5240 Nimp L1378;
AND L1378 Resdum L66582;
NOT L66582 Nwell _resnsnpoly;
AND L66582 Nwell _resnsnpoly_nw;
AND SiProt pactive L88604;
AND L88604 Resdum L197;
AND L197 Nwell _resnspdiff;
AND L5240 Pimp L60960;
AND L60960 Resdum L4294;
NOT L4294 Nwell _resnsppoly;
AND L4294 Nwell _resnsppoly_nw;
SELECT -interact -not nactive SiProt L62496;
AND L62496 Resdum L426;
NOT L426 Nwell _ressndiff;
NOT Poly SiProt L90381;
AND L90381 Nimp L49196;
AND L49196 Resdum L17878;
NOT L17878 Nwell _ressnpoly;
AND L17878 Nwell _ressnpoly_nw;
SELECT -interact -not pactive SiProt L79746;
AND L79746 Resdum L22728;
AND L22728 Nwell _resspdiff;
AND L90381 Pimp L8778;
AND L8778 Resdum L54937;
NOT L54937 Nwell _ressppoly;
AND L54937 Nwell _ressppoly_nw;
AND ind10 ind11 L54420;
AND L54420 _ind_s L42364;
SELECT -touch L42364 ind_hole L12760;
SELECT -interact L12760 Via10 ind_ct;
AND Via10 _ind_s L13648;
NOT L13648 ind_ct ind_via_diva;
AND Oxide Oxide_thk L24975;
AND L24975 Poly L98842;
AND L98842 Pimp L73768;
OR Cap3dum Capdum L8948;
NOT L73768 L8948 _pmos2v;
ANGLE -not ind_ct -ltgt 0 90 L65767;
EDGE_EXPAND L65767 -outside_by 0.1 L12066;
AND L12066 ind10 L64022;
EDGE_BOOLEAN -coincident_only L64022 ind_hole -outside L30099;
EDGE_EXPAND L30099 -outside_by 101 L43958;
AND L43958 ind_hole ind_rad;
NOT bulk nb_tap L14174;
SIZE Psub -by -0.001 L86601;
NOT Psub L86601 L7495;
NOT L14174 L7495 psubstrate;
AND L66375 Nimp L89552;
AND L89552 Nzvt L70180;
NOT L70180 Nhvt L21328;
NOT L21328 Nburied _nmos_12_native;
AND L98842 Nimp L14186;
AND L14186 Nzvt L15681;
NOT L15681 Nhvt L10869;
NOT L10869 Nburied _nmos_25_native;
AND L97435 Pimp L62041;
NOT L62041 Plvt L28017;
NOT L28017 Phvt L17166;
AND L17166 Nwell _pdio;
AND L77738 Pimp L16131;
NOT L16131 Plvt L48360;
NOT L48360 Phvt L917;
AND L917 Nwell _pdio_2v;
SIZE IND2dummy -by 5 L70261;
SIZE INDdummy -by -1 L66884;
NOT L70261 L66884 L26372;
AND INDdummy L26372 L19884;
NOT L19884 ind11 L73859;
EDGE_BOOLEAN -coincident_only ind11 L73859 -outside L50941;
EDGE_EXPAND L50941 -inside_by 0.001 L12819;
SELECT -interact ind11 L12819 L33493;
SELECT -interact L73859 L33493 -eq 2 ind2_sp1;
SELECT -touch ind_nr IND2dummy L69850;
ANGLE -not L69850 -ltgt 0 90 L78036;
EDGE_EXPAND L78036 -outside_by 0.01 L91609;
NOT L91609 ind11 L15138;
NOT L15138 ind10 L37576;
VERTEX L37576 -lt 5 ind2_space;
AND _ind_a ind_hole L69131;
SIZE L69131 -by 0.1 L1472;
EDGE_EXPAND L1472 -inside_by 0.1 L82556;
NOT L1472 L69131 L62333;
NOT L62333 L82556 L28951;
ANGLE -not L28951 -ltgt 0 90 L87029;
EDGE_EXPAND L87029 -outside_by 101 L27296;
OR L27296 L28951 L13931;
AND L13931 ind_hole L10222;
ANGLE L10222 -ltgt 0 90 L25455;
EDGE_EXPAND L25455 -inside_by 0.001 L96841;
SELECT -interact -not L10222 L96841 L68829;
AREA L68829 -gt 0.8 inda_rad;
AND L97435 Nimp L21623;
NOT L21623 Nlvt L12020;
NOT L12020 Nhvt L4397;
NOT L4397 Nzvt L8315;
NOT L8315 Nwell _ndio;
AND L77738 Nimp L56549;
NOT L56549 Nlvt L18325;
NOT L18325 Nhvt L87119;
NOT L87119 Nzvt L50344;
NOT L50344 Nwell _ndio_2v;
AND L89552 Nhvt L87478;
OR Nlvt Nzvt L49009;
OR L49009 Nburied L13756;
NOT L87478 L13756 _nmos1v_hvt;
AND L89552 Nlvt L83634;
OR Nhvt Nzvt L25035;
OR L25035 Nburied L68361;
NOT L83634 L68361 _nmos1v_lvt;
NOT L89552 Nzvt L25441;
NOT L25441 Nhvt L70734;
NOT L70734 Nburied L8530;
AND Capdum L8530 _nmoscap1v;
NOT L14186 Nzvt L55994;
NOT L55994 Nhvt L55604;
NOT L55604 Nburied L64343;
AND Capdum L64343 _nmoscap2v;
OR Phvt Plvt L20537;
OR Capdum L20537 L86632;
OR Cap3dum L86632 L85139;
NOT L29970 L85139 _pmos1v;
NOT L29970 Nzvt L5017;
NOT L5017 Nhvt L28655;
NOT L28655 Nburied L38143;
AND Capdum L38143 _pmoscap1v;
NOT L73768 Nzvt L4203;
NOT L4203 Nhvt L16207;
NOT L16207 Nburied L72451;
AND Capdum L72451 _pmoscap2v;
NOT L64343 L8948 _nmos_25;
OR L25035 Nlvt L40124;
OR L40124 Nburied L71361;
OR Capdum L71361 L32193;
OR Cap3dum L32193 L26526;
NOT L89552 L26526 _nmos1v;
CONNECT Bondpad metal11_conn -by bp_tap;
CONNECT ind11 metal11_conn;
CONNECT metal11_conn CapMetal -by via10_cap;
CONNECT metal11_conn metal10_conn -by via10_nocap;
CONNECT ind11 ind10 -by ind_via_diva;
CONNECT metal11_conn metal10_conn -by via10_nodev;
CONNECT ind_ct ind10;
CONNECT ind10 metal10_conn;
CONNECT metal10_conn metal9_conn -by Via9;
CONNECT metal9_conn metal8_conn -by Via8;
CONNECT metal8_conn metal7_conn -by Via7;
CONNECT metal7_conn metal6_conn -by Via6;
CONNECT metal6_conn metal5_conn -by Via5;
CONNECT metal5_conn metal4_conn -by Via4;
CONNECT metal4_conn metal3_conn -by Via3;
CONNECT metal3_conn metal2_conn -by Via2;
CONNECT metal2_conn metal1_conn -by Via1;
CONNECT metal1_conn poly_conn -by cont_poly;
CONNECT metal1_conn pdiff_conn -by cont_pdiff;
CONNECT metal1_conn npn_emit -by cont_ndiff;
CONNECT metal1_conn ndiff_conn -by cont_ndiff;
CONNECT metal1_conn pnp_emit -by cont_pdiff;
SCONNECT pdiff_conn psubstrate -by ptap;
LVS_SOFTCHK psubstrate -type contact;
SCONNECT ndiff_conn nwell_conn -by ntap;
LVS_SOFTCHK nwell_conn -type contact;
SCONNECT nwell_conn Nburied -by nb_tap;
LVS_SOFTCHK Nburied -type contact;
ATTACH ind11_text ind11;
ATTACH metal11_conn_text metal11_conn;
ATTACH ind11_text ind_ct;
ATTACH ind10_text ind_ct;
ATTACH ind10_text ind10;
ATTACH metal10_conn_text metal10_conn;
ATTACH metal9_conn_text metal9_conn;
ATTACH metal8_conn_text metal8_conn;
ATTACH metal7_conn_text metal7_conn;
ATTACH metal6_conn_text metal6_conn;
ATTACH metal5_conn_text metal5_conn;
ATTACH metal4_conn_text metal4_conn;
ATTACH metal3_conn_text metal3_conn;
ATTACH metal2_conn_text metal2_conn;
ATTACH metal1_conn_text metal1_conn;
ATTACH nwell_conn_text nwell_conn;
ATTACH nwell_label nwell_conn;
ATTACH m1_label metal1_conn;
ATTACH m2_label metal2_conn;
ATTACH m3_label metal3_conn;
ATTACH m4_label metal4_conn;
ATTACH m5_label metal5_conn;
ATTACH m6_label metal6_conn;
ATTACH m7_label metal7_conn;
ATTACH m8_label metal8_conn;
ATTACH m9_label metal9_conn;
ATTACH m10_label metal10_conn;
ATTACH m11_label metal11_conn;
ATTACH nwell_pin nwell_conn;
ATTACH m1_pin metal1_conn;
ATTACH m2_pin metal2_conn;
ATTACH m3_pin metal3_conn;
ATTACH m4_pin metal4_conn;
ATTACH m5_pin metal5_conn;
ATTACH m6_pin metal6_conn;
ATTACH m7_pin metal7_conn;
ATTACH m8_pin metal8_conn;
ATTACH m9_pin metal9_conn;
ATTACH m10_pin metal10_conn;
ATTACH m11_pin metal11_conn;
AND psubstrate nactive _nmos1v_sti;
SIZE _nmos1v -by 1 _nmos1v_wpe_temp;
NOT _nmos1v_wpe_temp Nwell _nmos1v_wpe;
DEVICE MN ( g45n1svt ) _nmos1v poly_conn ( G ) ndiff_conn ( S ) ndiff_conn ( D ) psubstrate ( B ) ( S D ) -model g45n1svt < _nmos1v_sti > < _nmos1v_wpe > [ property fw , w , l , ad , as , pd , ps , sa , sb , sca , scb , scc 
 width = perim_co ( _nmos1v , ndiff_conn ) / 2 
 fw = width 
 w = width 
 l = area ( _nmos1v ) / width 
 ad = area ( D ) 
 as = area ( S ) 
 pd = perimeter ( D ) 
 ps = perimeter ( S ) 
 s = ENCLOSURE_VECTOR ( _nmos1v_sti , 2 ) 
 sw = SUM ( s::w ) 
 sa = SUM ( s::a * ( s::w / sw ) ) 
 sb = SUM ( s::b * ( s::w / sw ) ) 
 sch = ENCLOSURE_PERPENDICULAR ( _nmos1v , _nmos1v_wpe , S , 1 ) 
 scv = ENCLOSURE_PARALLEL ( _nmos1v , _nmos1v_wpe , S , 1 ) 
 sca = TVF_NUM_FUN ( "calc_sca" , "wpe_procedure" , sch , scv , w , l , 1 ) 
 scb = TVF_NUM_FUN ( "calc_scb" , "wpe_procedure" , sch , scv , w , l , 1 ) 
 scc = TVF_NUM_FUN ( "calc_scc" , "wpe_procedure" , sch , scv , w , l , 1 ) 
 ];
LVS_CHECK_PROPERTY MN ( g45n1svt ) l l -tolerance 0;
LVS_CHECK_PROPERTY MN ( g45n1svt ) w w -tolerance 0;
LVS_MAP_DEVICE M ( g45n1svt ) MN ( g45n1svt );
AND psubstrate nactive _nmos1v_hvt_sti;
SIZE _nmos1v_hvt -by 1 _nmos1v_hvt_wpe_temp;
NOT _nmos1v_hvt_wpe_temp Nwell _nmos1v_hvt_wpe;
DEVICE MN ( g45n1hvt ) _nmos1v_hvt poly_conn ( G ) ndiff_conn ( S ) ndiff_conn ( D ) psubstrate ( B ) ( S D ) -model g45n1hvt < _nmos1v_hvt_sti > < _nmos1v_hvt_wpe > [ property fw , w , l , ad , as , pd , ps , sa , sb , sca , scb , scc 
 width = perim_co ( _nmos1v_hvt , ndiff_conn ) / 2 
 fw = width 
 w = width 
 l = area ( _nmos1v_hvt ) / width 
 ad = area ( D ) 
 as = area ( S ) 
 pd = perimeter ( D ) 
 ps = perimeter ( S ) 
 s = ENCLOSURE_VECTOR ( _nmos1v_hvt_sti , 2 ) 
 sw = SUM ( s::w ) 
 sa = SUM ( s::a * ( s::w / sw ) ) 
 sb = SUM ( s::b * ( s::w / sw ) ) 
 sch = ENCLOSURE_PERPENDICULAR ( _nmos1v_hvt , _nmos1v_hvt_wpe , S , 1 ) 
 scv = ENCLOSURE_PARALLEL ( _nmos1v_hvt , _nmos1v_hvt_wpe , S , 1 ) 
 sca = TVF_NUM_FUN ( "calc_sca" , "wpe_procedure" , sch , scv , w , l , 1 ) 
 scb = TVF_NUM_FUN ( "calc_scb" , "wpe_procedure" , sch , scv , w , l , 1 ) 
 scc = TVF_NUM_FUN ( "calc_scc" , "wpe_procedure" , sch , scv , w , l , 1 ) 
 ];
LVS_CHECK_PROPERTY MN ( g45n1hvt ) l l -tolerance 0;
LVS_CHECK_PROPERTY MN ( g45n1hvt ) w w -tolerance 0;
LVS_MAP_DEVICE M ( g45n1hvt ) MN ( g45n1hvt );
AND psubstrate nactive _nmos1v_lvt_sti;
SIZE _nmos1v_lvt -by 1 _nmos1v_lvt_wpe_temp;
NOT _nmos1v_lvt_wpe_temp Nwell _nmos1v_lvt_wpe;
DEVICE MN ( g45n1lvt ) _nmos1v_lvt poly_conn ( G ) ndiff_conn ( S ) ndiff_conn ( D ) psubstrate ( B ) ( S D ) -model g45n1lvt < _nmos1v_lvt_sti > < _nmos1v_lvt_wpe > [ property w , l , ad , as , pd , ps , sa , sb , sca , scb , scc 
 width = perim_co ( _nmos1v_lvt , ndiff_conn ) / 2 
 w = width 
 l = area ( _nmos1v_lvt ) / width 
 ad = area ( D ) 
 as = area ( S ) 
 pd = perimeter ( D ) 
 ps = perimeter ( S ) 
 s = ENCLOSURE_VECTOR ( _nmos1v_lvt_sti , 2 ) 
 sw = SUM ( s::w ) 
 sa = SUM ( s::a * ( s::w / sw ) ) 
 sb = SUM ( s::b * ( s::w / sw ) ) 
 sch = ENCLOSURE_PERPENDICULAR ( _nmos1v_lvt , _nmos1v_lvt_wpe , S , 1 ) 
 scv = ENCLOSURE_PARALLEL ( _nmos1v_lvt , _nmos1v_lvt_wpe , S , 1 ) 
 sca = TVF_NUM_FUN ( "calc_sca" , "wpe_procedure" , sch , scv , w , l , 1 ) 
 scb = TVF_NUM_FUN ( "calc_scb" , "wpe_procedure" , sch , scv , w , l , 1 ) 
 scc = TVF_NUM_FUN ( "calc_scc" , "wpe_procedure" , sch , scv , w , l , 1 ) 
 ];
LVS_CHECK_PROPERTY MN ( g45n1lvt ) l l -tolerance 0;
LVS_CHECK_PROPERTY MN ( g45n1lvt ) w w -tolerance 0;
LVS_MAP_DEVICE M ( g45n1lvt ) MN ( g45n1lvt );
AND psubstrate nactive _nmos_12_native_sti;
SIZE _nmos_12_native -by 1 _nmos_12_native_wpe_temp;
NOT _nmos_12_native_wpe_temp Nwell _nmos_12_native_wpe;
DEVICE MN ( g45n1nvt ) _nmos_12_native poly_conn ( G ) ndiff_conn ( S ) ndiff_conn ( D ) psubstrate ( B ) ( S D ) -model g45n1nvt < _nmos_12_native_sti > < _nmos_12_native_wpe > [ property fw , w , l , ad , as , pd , ps , sa , sb , sca , scb , scc 
 width = perim_co ( _nmos_12_native , ndiff_conn ) / 2 
 fw = width 
 w = width 
 l = area ( _nmos_12_native ) / width 
 ad = area ( D ) 
 as = area ( S ) 
 pd = perimeter ( D ) 
 ps = perimeter ( S ) 
 s = ENCLOSURE_VECTOR ( _nmos_12_native_sti , 2 ) 
 sw = SUM ( s::w ) 
 sa = SUM ( s::a * ( s::w / sw ) ) 
 sb = SUM ( s::b * ( s::w / sw ) ) 
 sch = ENCLOSURE_PERPENDICULAR ( _nmos_12_native , _nmos_12_native_wpe , S , 1 ) 
 scv = ENCLOSURE_PARALLEL ( _nmos_12_native , _nmos_12_native_wpe , S , 1 ) 
 sca = TVF_NUM_FUN ( "calc_sca" , "wpe_procedure" , sch , scv , w , l , 1 ) 
 scb = TVF_NUM_FUN ( "calc_scb" , "wpe_procedure" , sch , scv , w , l , 1 ) 
 scc = TVF_NUM_FUN ( "calc_scc" , "wpe_procedure" , sch , scv , w , l , 1 ) 
 ];
LVS_CHECK_PROPERTY MN ( g45n1nvt ) l l -tolerance 0;
LVS_CHECK_PROPERTY MN ( g45n1nvt ) w w -tolerance 0;
LVS_MAP_DEVICE M ( g45n1nvt ) MN ( g45n1nvt );
AND psubstrate nactive _nmos_25_sti;
SIZE _nmos_25 -by 1 _nmos_25_wpe_temp;
NOT _nmos_25_wpe_temp Nwell _nmos_25_wpe;
DEVICE MN ( g45n2svt ) _nmos_25 poly_conn ( G ) ndiff_conn ( S ) ndiff_conn ( D ) psubstrate ( B ) ( S D ) -model g45n2svt < _nmos_25_sti > < _nmos_25_wpe > [ property fw , w , l , ad , as , pd , ps , sa , sb , sca , scb , scc 
 width = perim_co ( _nmos_25 , ndiff_conn ) / 2 
 fw = width 
 w = width 
 l = area ( _nmos_25 ) / width 
 ad = area ( D ) 
 as = area ( S ) 
 pd = perimeter ( D ) 
 ps = perimeter ( S ) 
 s = ENCLOSURE_VECTOR ( _nmos_25_sti , 2 ) 
 sw = SUM ( s::w ) 
 sa = SUM ( s::a * ( s::w / sw ) ) 
 sb = SUM ( s::b * ( s::w / sw ) ) 
 sch = ENCLOSURE_PERPENDICULAR ( _nmos_25 , _nmos_25_wpe , S , 1 ) 
 scv = ENCLOSURE_PARALLEL ( _nmos_25 , _nmos_25_wpe , S , 1 ) 
 sca = TVF_NUM_FUN ( "calc_sca" , "wpe_procedure" , sch , scv , w , l , 1 ) 
 scb = TVF_NUM_FUN ( "calc_scb" , "wpe_procedure" , sch , scv , w , l , 1 ) 
 scc = TVF_NUM_FUN ( "calc_scc" , "wpe_procedure" , sch , scv , w , l , 1 ) 
 ];
LVS_CHECK_PROPERTY MN ( g45n2svt ) l l -tolerance 0;
LVS_CHECK_PROPERTY MN ( g45n2svt ) w w -tolerance 0;
LVS_MAP_DEVICE M ( g45n2svt ) MN ( g45n2svt );
AND psubstrate nactive _nmos_25_native_sti;
SIZE _nmos_25_native -by 1 _nmos_25_native_wpe_temp;
NOT _nmos_25_native_wpe_temp Nwell _nmos_25_native_wpe;
DEVICE MN ( g45n2nvt ) _nmos_25_native poly_conn ( G ) ndiff_conn ( S ) ndiff_conn ( D ) psubstrate ( B ) ( S D ) -model g45n2nvt < _nmos_25_native_sti > < _nmos_25_native_wpe > [ property fw , w , l , ad , as , pd , ps , sa , sb , sca , scb , scc 
 width = perim_co ( _nmos_25_native , ndiff_conn ) / 2 
 fw = width 
 w = width 
 l = area ( _nmos_25_native ) / width 
 ad = area ( D ) 
 as = area ( S ) 
 pd = perimeter ( D ) 
 ps = perimeter ( S ) 
 s = ENCLOSURE_VECTOR ( _nmos_25_native_sti , 2 ) 
 sw = SUM ( s::w ) 
 sa = SUM ( s::a * ( s::w / sw ) ) 
 sb = SUM ( s::b * ( s::w / sw ) ) 
 sch = ENCLOSURE_PERPENDICULAR ( _nmos_25_native , _nmos_25_native_wpe , S , 1 ) 
 scv = ENCLOSURE_PARALLEL ( _nmos_25_native , _nmos_25_native_wpe , S , 1 ) 
 sca = TVF_NUM_FUN ( "calc_sca" , "wpe_procedure" , sch , scv , w , l , 1 ) 
 scb = TVF_NUM_FUN ( "calc_scb" , "wpe_procedure" , sch , scv , w , l , 1 ) 
 scc = TVF_NUM_FUN ( "calc_scc" , "wpe_procedure" , sch , scv , w , l , 1 ) 
 ];
LVS_CHECK_PROPERTY MN ( g45n2nvt ) l l -tolerance 0;
LVS_CHECK_PROPERTY MN ( g45n2nvt ) w w -tolerance 0;
LVS_MAP_DEVICE M ( g45n2nvt ) MN ( g45n2nvt );
DEVICE MN ( g45ncap1 ) _nmoscap1v poly_conn ( G ) ndiff_conn ( S ) ndiff_conn ( D ) psubstrate ( B ) ( S D ) -model g45ncap1 [ property w , l , ad , as , pd , ps 
 width = perim_co ( _nmoscap1v , ndiff_conn ) / 2 
 w = width 
 l = area ( _nmoscap1v ) / width 
 ad = area ( D ) 
 as = area ( S ) 
 pd = perimeter ( D ) 
 ps = perimeter ( S ) 
 ];
LVS_CHECK_PROPERTY MN ( g45ncap1 ) l l -tolerance 0;
LVS_CHECK_PROPERTY MN ( g45ncap1 ) w w -tolerance 0;
DEVICE MN ( g45ncap2 ) _nmoscap2v poly_conn ( G ) ndiff_conn ( S ) ndiff_conn ( D ) psubstrate ( B ) ( S D ) -model g45ncap2 [ property w , l , ad , as , pd , ps 
 width = perim_co ( _nmoscap2v , ndiff_conn ) / 2 
 w = width 
 l = area ( _nmoscap2v ) / width 
 ad = area ( D ) 
 as = area ( S ) 
 pd = perimeter ( D ) 
 ps = perimeter ( S ) 
 ];
LVS_CHECK_PROPERTY MN ( g45ncap2 ) l l -tolerance 0;
LVS_CHECK_PROPERTY MN ( g45ncap2 ) w w -tolerance 0;
DEVICE MP ( g45p1svt ) _pmos1v poly_conn ( G ) pdiff_conn ( S ) pdiff_conn ( D ) nwell_conn ( B ) ( S D ) -model g45p1svt < pactive > [ property fw , w , l , ad , as , pd , ps , sa , sb , sca , scb , scc 
 width = perim_co ( _pmos1v , pdiff_conn ) / 2 
 fw = width 
 w = width 
 l = area ( _pmos1v ) / width 
 ad = area ( D ) 
 as = area ( S ) 
 pd = perimeter ( D ) 
 ps = perimeter ( S ) 
 s = ENCLOSURE_VECTOR ( pactive , 2 ) 
 sw = SUM ( s::w ) 
 sa = SUM ( s::a * ( s::w / sw ) ) 
 sb = SUM ( s::b * ( s::w / sw ) ) 
 sch = ENCLOSURE_PERPENDICULAR ( _pmos1v , nwell_conn , S , 1 ) 
 scv = ENCLOSURE_PARALLEL ( _pmos1v , nwell_conn , S , 1 ) 
 sca = TVF_NUM_FUN ( "calc_sca" , "wpe_procedure" , sch , scv , w , l , 1 ) 
 scb = TVF_NUM_FUN ( "calc_scb" , "wpe_procedure" , sch , scv , w , l , 1 ) 
 scc = TVF_NUM_FUN ( "calc_scc" , "wpe_procedure" , sch , scv , w , l , 1 ) 
 ];
LVS_CHECK_PROPERTY MP ( g45p1svt ) l l -tolerance 0;
LVS_CHECK_PROPERTY MP ( g45p1svt ) w w -tolerance 0;
LVS_MAP_DEVICE M ( g45p1svt ) MP ( g45p1svt );
DEVICE MP ( g45p1hvt ) _pmos1v_hvt poly_conn ( G ) pdiff_conn ( S ) pdiff_conn ( D ) nwell_conn ( B ) ( S D ) -model g45p1hvt < pactive > [ property fw , w , l , ad , as , pd , ps , sa , sb , sca , scb , scc 
 width = perim_co ( _pmos1v_hvt , pdiff_conn ) / 2 
 fw = width 
 w = width 
 l = area ( _pmos1v_hvt ) / width 
 ad = area ( D ) 
 as = area ( S ) 
 pd = perimeter ( D ) 
 ps = perimeter ( S ) 
 s = ENCLOSURE_VECTOR ( pactive , 2 ) 
 sw = SUM ( s::w ) 
 sa = SUM ( s::a * ( s::w / sw ) ) 
 sb = SUM ( s::b * ( s::w / sw ) ) 
 sch = ENCLOSURE_PERPENDICULAR ( _pmos1v_hvt , nwell_conn , S , 1 ) 
 scv = ENCLOSURE_PARALLEL ( _pmos1v_hvt , nwell_conn , S , 1 ) 
 sca = TVF_NUM_FUN ( "calc_sca" , "wpe_procedure" , sch , scv , w , l , 1 ) 
 scb = TVF_NUM_FUN ( "calc_scb" , "wpe_procedure" , sch , scv , w , l , 1 ) 
 scc = TVF_NUM_FUN ( "calc_scc" , "wpe_procedure" , sch , scv , w , l , 1 ) 
 ];
LVS_CHECK_PROPERTY MP ( g45p1hvt ) l l -tolerance 0;
LVS_CHECK_PROPERTY MP ( g45p1hvt ) w w -tolerance 0;
LVS_MAP_DEVICE M ( g45p1hvt ) MP ( g45p1hvt );
DEVICE MP ( g45p1lvt ) _pmos1v_lvt poly_conn ( G ) pdiff_conn ( S ) pdiff_conn ( D ) nwell_conn ( B ) ( S D ) -model g45p1lvt < pactive > [ property fw , w , l , ad , as , pd , ps , sa , sb , sca , scb , scc 
 width = perim_co ( _pmos1v_lvt , pdiff_conn ) / 2 
 fw = width 
 w = width 
 l = area ( _pmos1v_lvt ) / width 
 ad = area ( D ) 
 as = area ( S ) 
 pd = perimeter ( D ) 
 ps = perimeter ( S ) 
 s = ENCLOSURE_VECTOR ( pactive , 2 ) 
 sw = SUM ( s::w ) 
 sa = SUM ( s::a * ( s::w / sw ) ) 
 sb = SUM ( s::b * ( s::w / sw ) ) 
 sch = ENCLOSURE_PERPENDICULAR ( _pmos1v_lvt , nwell_conn , S , 1 ) 
 scv = ENCLOSURE_PARALLEL ( _pmos1v_lvt , nwell_conn , S , 1 ) 
 sca = TVF_NUM_FUN ( "calc_sca" , "wpe_procedure" , sch , scv , w , l , 1 ) 
 scb = TVF_NUM_FUN ( "calc_scb" , "wpe_procedure" , sch , scv , w , l , 1 ) 
 scc = TVF_NUM_FUN ( "calc_scc" , "wpe_procedure" , sch , scv , w , l , 1 ) 
 ];
LVS_CHECK_PROPERTY MP ( g45p1lvt ) l l -tolerance 0;
LVS_CHECK_PROPERTY MP ( g45p1lvt ) w w -tolerance 0;
LVS_MAP_DEVICE M ( g45p1lvt ) MP ( g45p1lvt );
DEVICE MP ( g45p2svt ) _pmos2v poly_conn ( G ) pdiff_conn ( S ) pdiff_conn ( D ) nwell_conn ( B ) ( S D ) -model g45p2svt < pactive > [ property fw , w , l , ad , as , pd , ps , sa , sb , sca , scb , scc 
 width = perim_co ( _pmos2v , pdiff_conn ) / 2 
 fw = width 
 w = width 
 l = area ( _pmos2v ) / width 
 ad = area ( D ) 
 as = area ( S ) 
 pd = perimeter ( D ) 
 ps = perimeter ( S ) 
 s = ENCLOSURE_VECTOR ( pactive , 2 ) 
 sw = SUM ( s::w ) 
 sa = SUM ( s::a * ( s::w / sw ) ) 
 sb = SUM ( s::b * ( s::w / sw ) ) 
 sch = ENCLOSURE_PERPENDICULAR ( _pmos2v , nwell_conn , S , 1 ) 
 scv = ENCLOSURE_PARALLEL ( _pmos2v , nwell_conn , S , 1 ) 
 sca = TVF_NUM_FUN ( "calc_sca" , "wpe_procedure" , sch , scv , w , l , 1 ) 
 scb = TVF_NUM_FUN ( "calc_scb" , "wpe_procedure" , sch , scv , w , l , 1 ) 
 scc = TVF_NUM_FUN ( "calc_scc" , "wpe_procedure" , sch , scv , w , l , 1 ) 
 ];
LVS_CHECK_PROPERTY MP ( g45p2svt ) l l -tolerance 0;
LVS_CHECK_PROPERTY MP ( g45p2svt ) w w -tolerance 0;
LVS_MAP_DEVICE M ( g45p2svt ) MP ( g45p2svt );
DEVICE MP ( g45pcap1 ) _pmoscap1v poly_conn ( G ) pdiff_conn ( S ) pdiff_conn ( D ) nwell_conn ( B ) ( S D ) -model g45pcap1 [ property w , l , ad , as , pd , ps 
 width = perim_co ( _pmoscap1v , pdiff_conn ) / 2 
 w = width 
 l = area ( _pmoscap1v ) / width 
 ad = area ( D ) 
 as = area ( S ) 
 pd = perimeter ( D ) 
 ps = perimeter ( S ) 
 ];
LVS_CHECK_PROPERTY MP ( g45pcap1 ) l l -tolerance 0;
LVS_CHECK_PROPERTY MP ( g45pcap1 ) w w -tolerance 0;
DEVICE MP ( g45pcap2 ) _pmoscap2v poly_conn ( G ) pdiff_conn ( S ) pdiff_conn ( D ) nwell_conn ( B ) ( S D ) -model g45pcap2 [ property w , l , ad , as , pd , ps 
 width = perim_co ( _pmoscap2v , pdiff_conn ) / 2 
 w = width 
 l = area ( _pmoscap2v ) / width 
 ad = area ( D ) 
 as = area ( S ) 
 pd = perimeter ( D ) 
 ps = perimeter ( S ) 
 ];
LVS_CHECK_PROPERTY MP ( g45pcap2 ) l l -tolerance 0;
LVS_CHECK_PROPERTY MP ( g45pcap2 ) w w -tolerance 0;
DEVICE R ( g45rm1 ) _resm1 metal1_conn ( PLUS ) metal1_conn ( MINUS ) ( PLUS MINUS ) -model g45rm1 [ property w , effW , l , effL , r , segW , segL 
 width = perim_co ( _resm1 , metal1_conn ) / 2 
 length = perim_out ( _resm1 , metal1_conn ) / 2 
 w = width 
 effW = width 
 segW = width 
 l = ( length - ( 0.45 * bends ( _resm1 ) * width ) ) 
 effL = l 
 segL = l 
 r = R_metal1 * ( l / w ) 
 ];
LVS_CHECK_PROPERTY R ( g45rm1 ) w w -tolerance 0;
LVS_CHECK_PROPERTY R ( g45rm1 ) l l -tolerance 0;
DEVICE R ( g45rm2 ) _resm2 metal2_conn ( PLUS ) metal2_conn ( MINUS ) ( PLUS MINUS ) -model g45rm2 [ property w , effW , l , effL , r , segW , segL 
 width = perim_co ( _resm2 , metal2_conn ) / 2 
 length = perim_out ( _resm2 , metal2_conn ) / 2 
 w = width 
 effW = width 
 segW = width 
 l = ( length - ( 0.45 * bends ( _resm2 ) * width ) ) 
 effL = l 
 segL = l 
 r = R_metal2_7 * ( l / w ) 
 ];
LVS_CHECK_PROPERTY R ( g45rm2 ) w w -tolerance 0;
LVS_CHECK_PROPERTY R ( g45rm2 ) l l -tolerance 0;
DEVICE R ( g45rm3 ) _resm3 metal3_conn ( PLUS ) metal3_conn ( MINUS ) ( PLUS MINUS ) -model g45rm3 [ property w , effW , l , effL , r , segW , segL 
 width = perim_co ( _resm3 , metal3_conn ) / 2 
 length = perim_out ( _resm3 , metal3_conn ) / 2 
 w = width 
 effW = width 
 segW = width 
 l = ( length - ( 0.45 * bends ( _resm3 ) * width ) ) 
 effL = l 
 segL = l 
 r = R_metal2_7 * ( l / w ) 
 ];
LVS_CHECK_PROPERTY R ( g45rm3 ) w w -tolerance 0;
LVS_CHECK_PROPERTY R ( g45rm3 ) l l -tolerance 0;
DEVICE R ( g45rm4 ) _resm4 metal4_conn ( PLUS ) metal4_conn ( MINUS ) ( PLUS MINUS ) -model g45rm4 [ property w , effW , l , effL , r , segW , segL 
 width = perim_co ( _resm4 , metal4_conn ) / 2 
 length = perim_out ( _resm4 , metal4_conn ) / 2 
 w = width 
 effW = width 
 segW = width 
 l = ( length - ( 0.45 * bends ( _resm4 ) * width ) ) 
 effL = l 
 segL = l 
 r = R_metal2_7 * ( l / w ) 
 ];
LVS_CHECK_PROPERTY R ( g45rm4 ) w w -tolerance 0;
LVS_CHECK_PROPERTY R ( g45rm4 ) l l -tolerance 0;
DEVICE R ( g45rm5 ) _resm5 metal5_conn ( PLUS ) metal5_conn ( MINUS ) ( PLUS MINUS ) -model g45rm5 [ property w , effW , l , effL , r , segW , segL 
 width = perim_co ( _resm5 , metal5_conn ) / 2 
 length = perim_out ( _resm5 , metal5_conn ) / 2 
 w = width 
 effW = width 
 segW = width 
 l = ( length - ( 0.45 * bends ( _resm5 ) * width ) ) 
 effL = l 
 segL = l 
 r = R_metal2_7 * ( l / w ) 
 ];
LVS_CHECK_PROPERTY R ( g45rm5 ) w w -tolerance 0;
LVS_CHECK_PROPERTY R ( g45rm5 ) l l -tolerance 0;
DEVICE R ( g45rm6 ) _resm6 metal6_conn ( PLUS ) metal6_conn ( MINUS ) ( PLUS MINUS ) -model g45rm6 [ property w , effW , l , effL , r , segW , segL 
 width = perim_co ( _resm6 , metal6_conn ) / 2 
 length = perim_out ( _resm6 , metal6_conn ) / 2 
 w = width 
 effW = width 
 segW = width 
 l = ( length - ( 0.45 * bends ( _resm6 ) * width ) ) 
 effL = l 
 segL = l 
 r = R_metal2_7 * ( l / w ) 
 ];
LVS_CHECK_PROPERTY R ( g45rm6 ) w w -tolerance 0;
LVS_CHECK_PROPERTY R ( g45rm6 ) l l -tolerance 0;
DEVICE R ( g45rm7 ) _resm7 metal7_conn ( PLUS ) metal7_conn ( MINUS ) ( PLUS MINUS ) -model g45rm7 [ property w , effW , l , effL , r , segW , segL 
 width = perim_co ( _resm7 , metal7_conn ) / 2 
 length = perim_out ( _resm7 , metal7_conn ) / 2 
 w = width 
 effW = width 
 segW = width 
 l = ( length - ( 0.45 * bends ( _resm7 ) * width ) ) 
 effL = l 
 segL = l 
 r = R_metal2_7 * ( l / w ) 
 ];
LVS_CHECK_PROPERTY R ( g45rm7 ) w w -tolerance 0;
LVS_CHECK_PROPERTY R ( g45rm7 ) l l -tolerance 0;
DEVICE R ( g45rm8 ) _resm8 metal8_conn ( PLUS ) metal8_conn ( MINUS ) ( PLUS MINUS ) -model g45rm8 [ property w , effW , l , effL , r , segW , segL 
 width = perim_co ( _resm8 , metal8_conn ) / 2 
 length = perim_out ( _resm8 , metal8_conn ) / 2 
 w = width 
 effW = width 
 segW = width 
 l = ( length - ( 0.45 * bends ( _resm8 ) * width ) ) 
 effL = l 
 segL = l 
 r = R_metal8_10 * ( l / w ) 
 ];
LVS_CHECK_PROPERTY R ( g45rm8 ) w w -tolerance 0;
LVS_CHECK_PROPERTY R ( g45rm8 ) l l -tolerance 0;
DEVICE R ( g45rm9 ) _resm9 metal9_conn ( PLUS ) metal9_conn ( MINUS ) ( PLUS MINUS ) -model g45rm9 [ property w , effW , l , effL , r , segW , segL 
 width = perim_co ( _resm9 , metal9_conn ) / 2 
 length = perim_out ( _resm9 , metal9_conn ) / 2 
 w = width 
 effW = width 
 segW = width 
 l = ( length - ( 0.45 * bends ( _resm9 ) * width ) ) 
 effL = l 
 segL = l 
 r = R_metal8_10 * ( l / w ) 
 ];
LVS_CHECK_PROPERTY R ( g45rm9 ) w w -tolerance 0;
LVS_CHECK_PROPERTY R ( g45rm9 ) l l -tolerance 0;
DEVICE R ( g45rm10 ) _resm10 metal10_conn ( PLUS ) metal10_conn ( MINUS ) ( PLUS MINUS ) -model g45rm10 [ property w , effW , l , effL , r , segW , segL 
 width = perim_co ( _resm10 , metal10_conn ) / 2 
 length = perim_out ( _resm10 , metal10_conn ) / 2 
 w = width 
 effW = width 
 segW = width 
 l = ( length - ( 0.45 * bends ( _resm10 ) * width ) ) 
 effL = l 
 segL = l 
 r = R_metal8_10 * ( l / w ) 
 ];
LVS_CHECK_PROPERTY R ( g45rm10 ) w w -tolerance 0;
LVS_CHECK_PROPERTY R ( g45rm10 ) l l -tolerance 0;
DEVICE R ( g45rm11 ) _resm11 metal11_conn ( PLUS ) metal11_conn ( MINUS ) ( PLUS MINUS ) -model g45rm11 [ property w , effW , l , effL , r , segW , segL 
 width = perim_co ( _resm11 , metal11_conn ) / 2 
 length = perim_out ( _resm11 , metal11_conn ) / 2 
 w = width 
 effW = width 
 segW = width 
 l = ( length - ( 0.45 * bends ( _resm11 ) * width ) ) 
 effL = l 
 segL = l 
 r = R_metal11 * ( l / w ) 
 ];
LVS_CHECK_PROPERTY R ( g45rm11 ) w w -tolerance 0;
LVS_CHECK_PROPERTY R ( g45rm11 ) l l -tolerance 0;
DEVICE R ( g45rsnd ) _ressndiff ndiff_conn ( PLUS ) ndiff_conn ( MINUS ) psubstrate ( B ) ( PLUS MINUS ) -model g45rsnd [ property w , effW , l , effL , r , segW , segL 
 width = perim_co ( _ressndiff , ndiff_conn ) / 2 
 length = perim_out ( _ressndiff , ndiff_conn ) / 2 
 w = width 
 effW = width 
 segW = width 
 l = ( length - ( 0.45 * bends ( _ressndiff ) * width ) ) 
 effL = l 
 segL = l 
 r = R_snactive * ( l / w ) 
 ];
LVS_CHECK_PROPERTY R ( g45rsnd ) w w -tolerance 0;
LVS_CHECK_PROPERTY R ( g45rsnd ) l l -tolerance 0;
DEVICE R ( g45rnsnd ) _resnsndiff ndiff_conn ( PLUS ) ndiff_conn ( MINUS ) psubstrate ( B ) ( PLUS MINUS ) -model g45rnsnd [ property w , effW , l , effL , r , segW , segL 
 width = perim_co ( _resnsndiff , ndiff_conn ) / 2 
 length = perim_out ( _resnsndiff , ndiff_conn ) / 2 
 w = width 
 effW = width 
 segW = width 
 l = ( length - ( 0.45 * bends ( _resnsndiff ) * width ) ) 
 effL = l 
 segL = l 
 r = R_nsnactive * ( l / w ) 
 ];
LVS_CHECK_PROPERTY R ( g45rnsnd ) w w -tolerance 0;
LVS_CHECK_PROPERTY R ( g45rnsnd ) l l -tolerance 0;
DEVICE R ( g45rsnp ) _ressnpoly poly_conn ( PLUS ) poly_conn ( MINUS ) psubstrate ( B ) ( PLUS MINUS ) -model g45rsnp [ property w , effW , l , effL , r , segW , segL 
 width = perim_co ( _ressnpoly , poly_conn ) / 2 
 length = perim_out ( _ressnpoly , poly_conn ) / 2 
 w = width 
 effW = width 
 segW = width 
 l = ( length - ( 0.45 * bends ( _ressnpoly ) * width ) ) 
 effL = l 
 segL = l 
 r = R_spactive * ( l / w ) 
 ];
LVS_CHECK_PROPERTY R ( g45rsnp ) w w -tolerance 0;
LVS_CHECK_PROPERTY R ( g45rsnp ) l l -tolerance 0;
DEVICE R ( g45rsnp ) _ressnpoly_nw poly_conn ( PLUS ) poly_conn ( MINUS ) nwell_conn ( B ) ( PLUS MINUS ) -model g45rsnp [ property w , effW , l , effL , r , segW , segL 
 width = perim_co ( _ressnpoly_nw , poly_conn ) / 2 
 length = perim_out ( _ressnpoly_nw , poly_conn ) / 2 
 w = width 
 effW = width 
 segW = width 
 l = ( length - ( 0.45 * bends ( _ressnpoly_nw ) * width ) ) 
 effL = l 
 segL = l 
 r = R_snpoly * ( l / w ) 
 ];
LVS_CHECK_PROPERTY R ( g45rsnp ) w w -tolerance 0;
LVS_CHECK_PROPERTY R ( g45rsnp ) l l -tolerance 0;
DEVICE R ( g45rnsnp ) _resnsnpoly poly_conn ( PLUS ) poly_conn ( MINUS ) psubstrate ( B ) ( PLUS MINUS ) -model g45rnsnp [ property w , effW , l , effL , r , segW , segL 
 width = perim_co ( _resnsnpoly , poly_conn ) / 2 
 length = perim_out ( _resnsnpoly , poly_conn ) / 2 
 w = width 
 effW = width 
 segW = width 
 l = ( length - ( 0.45 * bends ( _resnsnpoly ) * width ) ) 
 effL = l 
 segL = l 
 r = R_nsnpoly * ( l / w ) 
 ];
LVS_CHECK_PROPERTY R ( g45rnsnp ) w w -tolerance 0;
LVS_CHECK_PROPERTY R ( g45rnsnp ) l l -tolerance 0;
DEVICE R ( g45rnsnp ) _resnsnpoly_nw poly_conn ( PLUS ) poly_conn ( MINUS ) nwell_conn ( B ) ( PLUS MINUS ) -model g45rnsnp [ property w , effW , l , effL , r , segW , segL 
 width = perim_co ( _resnsnpoly_nw , poly_conn ) / 2 
 length = perim_out ( _resnsnpoly_nw , poly_conn ) / 2 
 w = width 
 effW = width 
 segW = width 
 l = ( length - ( 0.45 * bends ( _resnsnpoly_nw ) * width ) ) 
 effL = l 
 segL = l 
 r = R_nsnpoly * ( l / w ) 
 ];
LVS_CHECK_PROPERTY R ( g45rnsnp ) w w -tolerance 0;
LVS_CHECK_PROPERTY R ( g45rnsnp ) l l -tolerance 0;
DEVICE R ( g45rspd ) _resspdiff pdiff_conn ( PLUS ) pdiff_conn ( MINUS ) nwell_conn ( B ) ( PLUS MINUS ) -model g45rspd [ property w , effW , l , effL , r , segW , segL 
 width = perim_co ( _resspdiff , pdiff_conn ) / 2 
 length = perim_out ( _resspdiff , pdiff_conn ) / 2 
 w = width 
 effW = width 
 segW = width 
 l = ( length - ( 0.45 * bends ( _resspdiff ) * width ) ) 
 effL = l 
 segL = l 
 r = R_spactive * ( l / w ) 
 ];
LVS_CHECK_PROPERTY R ( g45rspd ) w w -tolerance 0;
LVS_CHECK_PROPERTY R ( g45rspd ) l l -tolerance 0;
DEVICE R ( g45rnspd ) _resnspdiff pdiff_conn ( PLUS ) pdiff_conn ( MINUS ) nwell_conn ( B ) ( PLUS MINUS ) -model g45rnspd [ property w , effW , l , effL , r , segW , segL 
 width = perim_co ( _resnspdiff , pdiff_conn ) / 2 
 length = perim_out ( _resnspdiff , pdiff_conn ) / 2 
 w = width 
 effW = width 
 segW = width 
 l = ( length - ( 0.45 * bends ( _resnspdiff ) * width ) ) 
 effL = l 
 segL = l 
 r = R_nspactive * ( l / w ) 
 ];
LVS_CHECK_PROPERTY R ( g45rnspd ) w w -tolerance 0;
LVS_CHECK_PROPERTY R ( g45rnspd ) l l -tolerance 0;
DEVICE R ( g45rspp ) _ressppoly poly_conn ( PLUS ) poly_conn ( MINUS ) psubstrate ( B ) ( PLUS MINUS ) -model g45rspp [ property w , effW , l , effL , r , segW , segL 
 width = perim_co ( _ressppoly , poly_conn ) / 2 
 length = perim_out ( _ressppoly , poly_conn ) / 2 
 w = width 
 effW = width 
 segW = width 
 l = ( length - ( 0.45 * bends ( _ressppoly ) * width ) ) 
 effL = l 
 segL = l 
 r = R_sppoly * ( l / w ) 
 ];
LVS_CHECK_PROPERTY R ( g45rspp ) w w -tolerance 0;
LVS_CHECK_PROPERTY R ( g45rspp ) l l -tolerance 0;
DEVICE R ( g45rspp ) _ressppoly_nw poly_conn ( PLUS ) poly_conn ( MINUS ) nwell_conn ( B ) ( PLUS MINUS ) -model g45rspp [ property w , effW , l , effL , r , segW , segL 
 width = perim_co ( _ressppoly_nw , poly_conn ) / 2 
 length = perim_out ( _ressppoly_nw , poly_conn ) / 2 
 w = width 
 effW = width 
 segW = width 
 l = ( length - ( 0.45 * bends ( _ressppoly_nw ) * width ) ) 
 effL = l 
 segL = l 
 r = R_sppoly * ( l / w ) 
 ];
LVS_CHECK_PROPERTY R ( g45rspp ) w w -tolerance 0;
LVS_CHECK_PROPERTY R ( g45rspp ) l l -tolerance 0;
DEVICE R ( g45rnspp ) _resnsppoly poly_conn ( PLUS ) poly_conn ( MINUS ) psubstrate ( B ) ( PLUS MINUS ) -model g45rnspp [ property w , effW , l , effL , r , segW , segL 
 width = perim_co ( _resnsppoly , poly_conn ) / 2 
 length = perim_out ( _resnsppoly , poly_conn ) / 2 
 w = width 
 effW = width 
 segW = width 
 l = ( length - ( 0.45 * bends ( _resnsppoly ) * width ) ) 
 effL = l 
 segL = l 
 r = R_nsppoly * ( l / w ) 
 ];
LVS_CHECK_PROPERTY R ( g45rnspp ) w w -tolerance 0;
LVS_CHECK_PROPERTY R ( g45rnspp ) l l -tolerance 0;
DEVICE R ( g45rnspp ) _resnsppoly_nw poly_conn ( PLUS ) poly_conn ( MINUS ) nwell_conn ( B ) ( PLUS MINUS ) -model g45rnspp [ property w , effW , l , effL , r , segW , segL 
 width = perim_co ( _resnsppoly_nw , poly_conn ) / 2 
 length = perim_out ( _resnsppoly_nw , poly_conn ) / 2 
 w = width 
 effW = width 
 segW = width 
 l = ( length - ( 0.45 * bends ( _resnsppoly_nw ) * width ) ) 
 effL = l 
 segL = l 
 r = R_nsppoly * ( l / w ) 
 ];
LVS_CHECK_PROPERTY R ( g45rnspp ) w w -tolerance 0;
LVS_CHECK_PROPERTY R ( g45rnspp ) l l -tolerance 0;
DEVICE R ( g45rnws ) _resnwsti nwell_conn ( PLUS ) nwell_conn ( MINUS ) psubstrate ( B ) ( PLUS MINUS ) -model g45rnws [ property w , effW , l , effL , r , segW , segL 
 width = perim_co ( _resnwsti , nwell_conn ) / 2 
 length = perim_out ( _resnwsti , nwell_conn ) / 2 
 w = width 
 effW = width 
 segW = width 
 l = ( length - ( 0.45 * bends ( _resnwsti ) * width ) ) 
 effL = l 
 segL = l 
 r = R_nwell * ( l / w ) 
 ];
LVS_CHECK_PROPERTY R ( g45rnws ) w w -tolerance 0;
LVS_CHECK_PROPERTY R ( g45rnws ) l l -tolerance 0;
DEVICE R ( g45rnwo ) _resnwoxide nwell_conn ( PLUS ) nwell_conn ( MINUS ) psubstrate ( B ) ( PLUS MINUS ) -model g45rnwo [ property w , effW , l , effL , r , segW , segL 
 width = perim_co ( _resnwoxide , nwell_conn ) / 2 
 length = perim_out ( _resnwoxide , nwell_conn ) / 2 
 w = width 
 effW = width 
 segW = width 
 l = ( length - ( 0.45 * bends ( _resnwoxide ) * width ) ) 
 effL = l 
 segL = l 
 r = R_nwell * ( l / w ) 
 ];
LVS_CHECK_PROPERTY R ( g45rnwo ) w w -tolerance 0;
LVS_CHECK_PROPERTY R ( g45rnwo ) l l -tolerance 0;
DEVICE D ( g45nd1svt ) _ndio psubstrate ( PLUS ) ndiff_conn ( MINUS ) -model g45nd1svt [ property area , pj 
 area = area ( _ndio ) 
 pj = perimeter ( _ndio ) 
 ];
LVS_CHECK_PROPERTY D ( g45nd1svt ) A A -tolerance 0;
LVS_CHECK_PROPERTY D ( g45nd1svt ) P P -tolerance 0;
DEVICE D ( g45nd1lvt ) _ndio_lvt psubstrate ( PLUS ) ndiff_conn ( MINUS ) -model g45nd1lvt [ property area , pj 
 area = area ( _ndio_lvt ) 
 pj = perimeter ( _ndio_lvt ) 
 ];
LVS_CHECK_PROPERTY D ( g45nd1lvt ) A A -tolerance 0;
LVS_CHECK_PROPERTY D ( g45nd1lvt ) P P -tolerance 0;
DEVICE D ( g45nd1hvt ) _ndio_hvt psubstrate ( PLUS ) ndiff_conn ( MINUS ) -model g45nd1hvt [ property area , pj 
 area = area ( _ndio_hvt ) 
 pj = perimeter ( _ndio_hvt ) 
 ];
LVS_CHECK_PROPERTY D ( g45nd1hvt ) A A -tolerance 0;
LVS_CHECK_PROPERTY D ( g45nd1hvt ) P P -tolerance 0;
DEVICE D ( g45nd1nvt ) _ndio_nvt psubstrate ( PLUS ) ndiff_conn ( MINUS ) -model g45nd1nvt [ property area , pj 
 area = area ( _ndio_nvt ) 
 pj = perimeter ( _ndio_nvt ) 
 ];
LVS_CHECK_PROPERTY D ( g45nd1nvt ) A A -tolerance 0;
LVS_CHECK_PROPERTY D ( g45nd1nvt ) P P -tolerance 0;
DEVICE D ( g45nd2svt ) _ndio_2v psubstrate ( PLUS ) ndiff_conn ( MINUS ) -model g45nd2svt [ property area , pj 
 area = area ( _ndio_2v ) 
 pj = perimeter ( _ndio_2v ) 
 ];
LVS_CHECK_PROPERTY D ( g45nd2svt ) A A -tolerance 0;
LVS_CHECK_PROPERTY D ( g45nd2svt ) P P -tolerance 0;
DEVICE D ( g45nd2nvt ) _ndio_2v_nvt psubstrate ( PLUS ) ndiff_conn ( MINUS ) -model g45nd2nvt [ property area , pj 
 area = area ( _ndio_2v_nvt ) 
 pj = perimeter ( _ndio_2v_nvt ) 
 ];
LVS_CHECK_PROPERTY D ( g45nd2nvt ) A A -tolerance 0;
LVS_CHECK_PROPERTY D ( g45nd2nvt ) P P -tolerance 0;
DEVICE D ( g45pd1svt ) _pdio pdiff_conn ( PLUS ) nwell_conn ( MINUS ) -model g45pd1svt [ property area , pj 
 area = area ( _pdio ) 
 pj = perimeter ( _pdio ) 
 ];
LVS_CHECK_PROPERTY D ( g45pd1svt ) A A -tolerance 0;
LVS_CHECK_PROPERTY D ( g45pd1svt ) P P -tolerance 0;
DEVICE D ( g45pd1lvt ) _pdio_lvt pdiff_conn ( PLUS ) nwell_conn ( MINUS ) -model g45pd1lvt [ property area , pj 
 area = area ( _pdio_lvt ) 
 pj = perimeter ( _pdio_lvt ) 
 ];
LVS_CHECK_PROPERTY D ( g45pd1lvt ) A A -tolerance 0;
LVS_CHECK_PROPERTY D ( g45pd1lvt ) P P -tolerance 0;
DEVICE D ( g45pd1hvt ) _pdio_hvt pdiff_conn ( PLUS ) nwell_conn ( MINUS ) -model g45pd1hvt [ property area , pj 
 area = area ( _pdio_hvt ) 
 pj = perimeter ( _pdio_hvt ) 
 ];
LVS_CHECK_PROPERTY D ( g45pd1hvt ) A A -tolerance 0;
LVS_CHECK_PROPERTY D ( g45pd1hvt ) P P -tolerance 0;
DEVICE D ( g45pd2svt ) _pdio_2v pdiff_conn ( PLUS ) nwell_conn ( MINUS ) -model g45pd2svt [ property area , pj 
 area = area ( _pdio_2v ) 
 pj = perimeter ( _pdio_2v ) 
 ];
LVS_CHECK_PROPERTY D ( g45pd2svt ) A A -tolerance 0;
LVS_CHECK_PROPERTY D ( g45pd2svt ) P P -tolerance 0;
DEVICE Q ( g45vpnp2 ) _vpnp2 psubstrate ( C ) nwell_conn ( B ) pdiff_conn ( E ) -model g45vpnp2 [ property area 
 area = area ( E ) * 1 * 1e+12 
 ];
LVS_CHECK_PROPERTY Q ( g45vpnp2 ) A A -tolerance 0;
DEVICE Q ( g45vpnp5 ) _vpnp5 psubstrate ( C ) nwell_conn ( B ) pdiff_conn ( E ) -model g45vpnp5 [ property area 
 area = area ( E ) * 1 * 1e+12 
 ];
LVS_CHECK_PROPERTY Q ( g45vpnp5 ) A A -tolerance 0;
DEVICE Q ( g45vpnp10 ) _vpnp10 psubstrate ( C ) nwell_conn ( B ) pdiff_conn ( E ) -model g45vpnp10 [ property area 
 area = area ( E ) * 1 * 1e+12 
 ];
LVS_CHECK_PROPERTY Q ( g45vpnp10 ) A A -tolerance 0;
DEVICE Q ( g45vnpn2 ) _npn2 nwell_conn ( C ) psubstrate ( B ) npn_emit ( E ) -model g45vnpn2 [ property area 
 area = area ( E ) * 1 * 1e+12 
 ];
LVS_CHECK_PROPERTY Q ( g45vnpn2 ) A A -tolerance 0;
DEVICE Q ( g45vnpn5 ) _npn5 nwell_conn ( C ) psubstrate ( B ) npn_emit ( E ) -model g45vnpn5 [ property area 
 area = area ( E ) * 1 * 1e+12 
 ];
LVS_CHECK_PROPERTY Q ( g45vnpn5 ) A A -tolerance 0;
DEVICE Q ( g45vnpn10 ) _npn10 nwell_conn ( C ) psubstrate ( B ) npn_emit ( E ) -model g45vnpn10 [ property area 
 area = area ( E ) * 1 * 1e+12 
 ];
LVS_CHECK_PROPERTY Q ( g45vnpn10 ) A A -tolerance 0;
DEVICE C ( g45cmim ) _mimcap CapMetal ( PLUS ) metal10_conn ( MINUS ) psubstrate ( B ) -model g45cmim [ property w , l , c , area , pj 
 w = ( ( perimeter ( _mimcap ) *0.25 ) + 0.5*sqrt ( ( 0.25*pow ( perimeter ( _mimcap ) , 2 ) ) - ( 4*area ( _mimcap ) ) ) ) 
 l = ( ( perimeter ( _mimcap ) *0.25 ) - 0.5*sqrt ( ( 0.25*pow ( perimeter ( _mimcap ) , 2 ) ) - ( 4*area ( _mimcap ) ) ) ) 
 c = area ( _mimcap ) *1e-15 + perimeter ( _mimcap ) *1e-16 
 area = area ( _mimcap ) 
 pj = perimeter ( _mimcap ) 
 ];
LVS_CHECK_PROPERTY C ( g45cmim ) l l -tolerance 0;
LVS_CHECK_PROPERTY C ( g45cmim ) w w -tolerance 0;
LVS_REDUCE_DEVICE C ( g45cmim ) -parallel yes [ tolerance l 0 w 0 
 effective l , w 
 l = sum ( l ) / count ( ) 
 w = sum ( w ) 
 ];
DEVICE L ( g45inda ) _ind_a ind10 ( PLUS ) ind11 ( MINUS ) psubstrate ( B ) ( PLUS MINUS ) < inda_width > < ind2_space > < inda_rad > < ind_nr > -model g45inda [ property width space nr rad 
 width = area ( inda_width ) * 100000000 
 space = area ( ind2_space ) * 50000000 
 nr = count ( ind_nr ) - 0.5 
 rad = area ( inda_rad ) * 5000000 
 ];
LVS_CHECK_PROPERTY L ( g45inda ) width width -tolerance 0;
LVS_CHECK_PROPERTY L ( g45inda ) space space -tolerance 0;
LVS_CHECK_PROPERTY L ( g45inda ) nr nr -tolerance 0;
LVS_CHECK_PROPERTY L ( g45inda ) rad rad -tolerance 0;
SELECT -inside ind10 _ind_s _ind_s_enc;
DEVICE L ( g45inds ) _ind_s ind11 ( PLUS ) ind11 ( MINUS ) psubstrate ( B ) ( PLUS MINUS ) -model g45inds < inds_width > < ind2_sp1 > < ind_rad > < _ind_s_enc > [ property width rad space nr 
 width = area ( inds_width ) * 100000000 
 space = area ( ind2_sp1 ) * 1000000 
 rad = area ( ind_rad ) * 5000000 
 nr = ( count ( _ind_s_enc ) + 1 ) 
 ];
LVS_CHECK_PROPERTY L ( g45inds ) width width -tolerance 0;
LVS_CHECK_PROPERTY L ( g45inds ) space space -tolerance 0;
LVS_CHECK_PROPERTY L ( g45inds ) nr nr -tolerance 0;
 LVS_CHECK_PROPERTY L ( g45inds ) rad rad -tolerance 0;

tcl_code wpe_procedure
{
proc calc_sca { SCH SCV W L scref} {
set  sca1 0.0
set  sca2 0.0
set  SCref  [ expr { [$scref] * 1e-6 } ]
set  slice_count1 [ $SCH slice_count ]
set  slice_count2 [ $SCV slice_count ]

for { set i 0 } { $i < $slice_count1} { incr i } {
    set sca1 [ expr { $sca1 + ([$SCH w $i] * ( (($SCref * $SCref/[$SCH a $i]) - ($SCref * $SCref/([$SCH a $i] + [$L]))) + (($SCref * $SCref/[$SCH b $i]) - ($SCref * $SCref/([$SCH b $i] + [$L]))) ) ) }]
}

for { set i 0 } { $i < $slice_count2} { incr i } {
    set sca2 [ expr { $sca2 + ([$SCV w $i] * ( (($SCref * $SCref/[$SCV a $i]) - ($SCref * $SCref/([$SCV a $i] + [$W]))) + (($SCref * $SCref/[$SCV b $i]) - ($SCref * $SCref/([$SCV b $i] + [$W]))) ) ) }]
}

return [ expr { ($sca1 + $sca2) / (([$W] * [$L])) }]
}

proc calc_scb { SCH SCV W L scref} {
set  scb1 0.0
set  scb2 0.0
set  SCref [ expr { [$scref] * 1e-06 } ]
set  slice_count1 [ $SCH slice_count ]
set  slice_count2 [ $SCV slice_count ]

for { set i 0 } { $i < $slice_count1} { incr i } {
    set expo_ha1 [ expr { exp(-10*[$SCH a $i]/$SCref) } ]
    set expo_ha2 [ expr { exp(-10*([$SCH a $i]+[$L])/$SCref) } ]
    set expo_hb1 [ expr { exp(-10*[$SCH b $i]/$SCref) } ]
    set expo_hb2 [ expr { exp(-10*([$SCH b $i]+[$L])/$SCref) } ]
    set scb1 [ expr {$scb1 + ([$SCH w $i] * (([$SCH a $i]/10 + $SCref/100)*$expo_ha1 - (([$SCH a $i] + [$L])/10 + $SCref/100)*$expo_ha2 + ([$SCH b $i]/10 + $SCref/100)*$expo_hb1 - (([$SCH b $i] + [$L])/10 + $SCref/100)*$expo_hb2) ) }]
}

for { set i 0 } { $i < $slice_count2} { incr i } {
    set expo_va1 [ expr { exp(-10*[$SCV a $i]/$SCref) } ]
    set expo_va2 [ expr { exp(-10*([$SCV a $i]+[$W])/$SCref) } ]
    set expo_vb1 [ expr { exp(-10*[$SCV b $i]/$SCref) } ]
    set expo_vb2 [ expr { exp(-10*([$SCV b $i]+[$W])/$SCref) } ]
    set scb2 [ expr {$scb2 + ([$SCV w $i] * (([$SCV a $i]/10 + $SCref/100)*$expo_va1 - (([$SCV a $i] + [$W])/10 + $SCref/100)*$expo_va2 + ([$SCV b $i]/10 + $SCref/100)*$expo_vb1 - (([$SCV b $i] + [$W])/10 + $SCref/100)*$expo_vb2) ) }]
}

return [ expr { ($scb1 + $scb2) / (([$W] * [$L])) }]
}

proc calc_scc { SCH SCV W L scref} {
set  scc1 0.0
set  scc2 0.0
set  SCref [ expr { [$scref] * 1e-6 } ]
set  slice_count1 [ $SCH slice_count ]
set  slice_count2 [ $SCV slice_count ]

for { set i 0 } { $i < $slice_count1} { incr i } {
    set expo_ha1 [ expr { exp(-20*[$SCH a $i]/$SCref) } ]
    set expo_ha2 [ expr { exp(-20*([$SCH a $i]+[$L])/$SCref) } ]
    set expo_hb1 [ expr { exp(-20*[$SCH b $i]/$SCref) } ]
    set expo_hb2 [ expr { exp(-20*([$SCH b $i]+[$L])/$SCref) } ]
    set scc1 [ expr {$scc1 + ([$SCH w $i] * (([$SCH a $i]/20 + $SCref/400)*$expo_ha1 - (([$SCH a $i] + [$L])/20 + $SCref/400)*$expo_ha2 + ([$SCH b $i]/20 + $SCref/400)*$expo_hb1 - (([$SCH b $i] + [$L])/20 + $SCref/400)*$expo_hb2) ) }]
}

for { set i 0 } { $i < $slice_count2} { incr i } {
    set expo_va1 [ expr { exp(-20*[$SCV a $i]/$SCref) } ]
    set expo_va2 [ expr { exp(-20*([$SCV a $i]+[$W])/$SCref) } ]
    set expo_vb1 [ expr { exp(-20*[$SCV b $i]/$SCref) } ]
    set expo_vb2 [ expr { exp(-20*([$SCV b $i]+[$W])/$SCref) } ]
    set scc2 [ expr {$scc2 + ([$SCV w $i] * (([$SCV a $i]/20 + $SCref/400)*$expo_va1 - (([$SCV a $i] + [$W])/20 + $SCref/400)*$expo_va2 + ([$SCV b $i]/20 + $SCref/400)*$expo_vb1 - (([$SCV b $i] + [$W])/20 + $SCref/400)*$expo_vb2) ) }]
}

return [ expr { ($scc1 + $scc2) / (([$W] * [$L])) }]
}

};



########################################################################
Optimizing Rules ...
########################################################################
[WARN] Neither hcell nor -automatch option is specified.
Completed execution early, as requested by the "-get_rules" or "-gen_tags"

   ONE LAYER BOOLEAN: Cumulative Time CPU =        0(s) REAL =        0(s)
   TWO LAYER BOOLEAN: Cumulative Time CPU =        0(s) REAL =        0(s)
 POLYGON TOPOLOGICAL: Cumulative Time CPU =        0(s) REAL =        0(s)
 POLYGON MEASUREMENT: Cumulative Time CPU =        0(s) REAL =        0(s)
                SIZE: Cumulative Time CPU =        0(s) REAL =        0(s)
    EDGE TOPOLOGICAL: Cumulative Time CPU =        0(s) REAL =        0(s)
    EDGE MEASUREMENT: Cumulative Time CPU =        0(s) REAL =        0(s)
               STAMP: Cumulative Time CPU =        0(s) REAL =        0(s)
       ONE LAYER DRC: Cumulative Time CPU =        0(s) REAL =        0(s)
       TWO LAYER DRC: Cumulative Time CPU =        0(s) REAL =        0(s)
            NET AREA: Cumulative Time CPU =        0(s) REAL =        0(s)
             DENSITY: Cumulative Time CPU =        0(s) REAL =        0(s)
       MISCELLANEOUS: Cumulative Time CPU =        0(s) REAL =        0(s)
             CONNECT: Cumulative Time CPU =        0(s) REAL =        0(s)
              DEVICE: Cumulative Time CPU =        0(s) REAL =        0(s)
                 ERC: Cumulative Time CPU =        0(s) REAL =        0(s)
       PATTERN_MATCH: Cumulative Time CPU =        0(s) REAL =        0(s)
            DFM FILL: Cumulative Time CPU =        0(s) REAL =        0(s)


Total CPU Time                    : 0(s)
Total Real Time                   : 0(s)
Peak Memory Used                  : 15(M)
Total Original Geometry           : 0(0)
Total ERC RuleChecks              : 0
Total ERC Results                 : 0 (0)


Netlist Extraction Finished Normally. Tue Jan 12 14:46:30 2021


